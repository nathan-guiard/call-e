
../a.out:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 82 2f 00 00    	push   0x2f82(%rip)        # 3fa8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 83 2f 00 00 	bnd jmp *0x2f83(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop

Disassembly of section .plt.got:

0000000000001070 <__cxa_finalize@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 7d 2f 00 00 	bnd jmp *0x2f7d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001080 <write@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 2d 2f 00 00 	bnd jmp *0x2f2d(%rip)        # 3fb8 <write@GLIBC_2.2.5>
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001090 <__stack_chk_fail@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 25 2f 00 00 	bnd jmp *0x2f25(%rip)        # 3fc0 <__stack_chk_fail@GLIBC_2.4>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010a0 <read@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 1d 2f 00 00 	bnd jmp *0x2f1d(%rip)        # 3fc8 <read@GLIBC_2.2.5>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <open@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 15 2f 00 00 	bnd jmp *0x2f15(%rip)        # 3fd0 <open@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000010c0 <_start>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	31 ed                	xor    %ebp,%ebp
    10c6:	49 89 d1             	mov    %rdx,%r9
    10c9:	5e                   	pop    %rsi
    10ca:	48 89 e2             	mov    %rsp,%rdx
    10cd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10d1:	50                   	push   %rax
    10d2:	54                   	push   %rsp
    10d3:	45 31 c0             	xor    %r8d,%r8d
    10d6:	31 c9                	xor    %ecx,%ecx
    10d8:	48 8d 3d ca 00 00 00 	lea    0xca(%rip),%rdi        # 11a9 <main>
    10df:	ff 15 f3 2e 00 00    	call   *0x2ef3(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    10e5:	f4                   	hlt    
    10e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    10ed:	00 00 00 

00000000000010f0 <deregister_tm_clones>:
    10f0:	48 8d 3d 19 2f 00 00 	lea    0x2f19(%rip),%rdi        # 4010 <__TMC_END__>
    10f7:	48 8d 05 12 2f 00 00 	lea    0x2f12(%rip),%rax        # 4010 <__TMC_END__>
    10fe:	48 39 f8             	cmp    %rdi,%rax
    1101:	74 15                	je     1118 <deregister_tm_clones+0x28>
    1103:	48 8b 05 d6 2e 00 00 	mov    0x2ed6(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    110a:	48 85 c0             	test   %rax,%rax
    110d:	74 09                	je     1118 <deregister_tm_clones+0x28>
    110f:	ff e0                	jmp    *%rax
    1111:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1118:	c3                   	ret    
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <register_tm_clones>:
    1120:	48 8d 3d e9 2e 00 00 	lea    0x2ee9(%rip),%rdi        # 4010 <__TMC_END__>
    1127:	48 8d 35 e2 2e 00 00 	lea    0x2ee2(%rip),%rsi        # 4010 <__TMC_END__>
    112e:	48 29 fe             	sub    %rdi,%rsi
    1131:	48 89 f0             	mov    %rsi,%rax
    1134:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1138:	48 c1 f8 03          	sar    $0x3,%rax
    113c:	48 01 c6             	add    %rax,%rsi
    113f:	48 d1 fe             	sar    %rsi
    1142:	74 14                	je     1158 <register_tm_clones+0x38>
    1144:	48 8b 05 a5 2e 00 00 	mov    0x2ea5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    114b:	48 85 c0             	test   %rax,%rax
    114e:	74 08                	je     1158 <register_tm_clones+0x38>
    1150:	ff e0                	jmp    *%rax
    1152:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1158:	c3                   	ret    
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <__do_global_dtors_aux>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	80 3d a5 2e 00 00 00 	cmpb   $0x0,0x2ea5(%rip)        # 4010 <__TMC_END__>
    116b:	75 2b                	jne    1198 <__do_global_dtors_aux+0x38>
    116d:	55                   	push   %rbp
    116e:	48 83 3d 82 2e 00 00 	cmpq   $0x0,0x2e82(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1175:	00 
    1176:	48 89 e5             	mov    %rsp,%rbp
    1179:	74 0c                	je     1187 <__do_global_dtors_aux+0x27>
    117b:	48 8b 3d 86 2e 00 00 	mov    0x2e86(%rip),%rdi        # 4008 <__dso_handle>
    1182:	e8 e9 fe ff ff       	call   1070 <__cxa_finalize@plt>
    1187:	e8 64 ff ff ff       	call   10f0 <deregister_tm_clones>
    118c:	c6 05 7d 2e 00 00 01 	movb   $0x1,0x2e7d(%rip)        # 4010 <__TMC_END__>
    1193:	5d                   	pop    %rbp
    1194:	c3                   	ret    
    1195:	0f 1f 00             	nopl   (%rax)
    1198:	c3                   	ret    
    1199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011a0 <frame_dummy>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	e9 77 ff ff ff       	jmp    1120 <register_tm_clones>

00000000000011a9 <main>:
    11a9:	f3 0f 1e fa          	endbr64 
    11ad:	55                   	push   %rbp
    11ae:	48 89 e5             	mov    %rsp,%rbp
    11b1:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    11b8:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    11bd:	48 83 ec 20          	sub    $0x20,%rsp
    11c1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    11c8:	00 00 
    11ca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    11ce:	31 c0                	xor    %eax,%eax
    11d0:	48 8d 85 f0 ef ff ff 	lea    -0x1010(%rbp),%rax
    11d7:	48 89 c6             	mov    %rax,%rsi
    11da:	b8 00 00 00 00       	mov    $0x0,%eax
    11df:	ba 00 02 00 00       	mov    $0x200,%edx
    11e4:	48 89 f7             	mov    %rsi,%rdi
    11e7:	48 89 d1             	mov    %rdx,%rcx
    11ea:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    11ed:	c7 85 e4 ef ff ff 01 	movl   $0x1,-0x101c(%rbp)
    11f4:	00 00 00 
    11f7:	be 00 00 00 00       	mov    $0x0,%esi
    11fc:	48 8d 05 01 0e 00 00 	lea    0xe01(%rip),%rax        # 2004 <_IO_stdin_used+0x4>
    1203:	48 89 c7             	mov    %rax,%rdi
    1206:	b8 00 00 00 00       	mov    $0x0,%eax
    120b:	e8 a0 fe ff ff       	call   10b0 <open@plt>
    1210:	89 85 e8 ef ff ff    	mov    %eax,-0x1018(%rbp)
    1216:	83 bd e8 ef ff ff ff 	cmpl   $0xffffffff,-0x1018(%rbp)
    121d:	75 0a                	jne    1229 <main+0x80>
    121f:	b8 01 00 00 00       	mov    $0x1,%eax
    1224:	e9 9e 00 00 00       	jmp    12c7 <main+0x11e>
    1229:	48 8d 8d f0 ef ff ff 	lea    -0x1010(%rbp),%rcx
    1230:	8b 85 e8 ef ff ff    	mov    -0x1018(%rbp),%eax
    1236:	ba 00 10 00 00       	mov    $0x1000,%edx
    123b:	48 89 ce             	mov    %rcx,%rsi
    123e:	89 c7                	mov    %eax,%edi
    1240:	e8 5b fe ff ff       	call   10a0 <read@plt>
    1245:	ba ed 01 00 00       	mov    $0x1ed,%edx
    124a:	be 41 00 00 00       	mov    $0x41,%esi
    124f:	48 8d 05 b6 0d 00 00 	lea    0xdb6(%rip),%rax        # 200c <_IO_stdin_used+0xc>
    1256:	48 89 c7             	mov    %rax,%rdi
    1259:	b8 00 00 00 00       	mov    $0x0,%eax
    125e:	e8 4d fe ff ff       	call   10b0 <open@plt>
    1263:	89 85 ec ef ff ff    	mov    %eax,-0x1014(%rbp)
    1269:	eb 4e                	jmp    12b9 <main+0x110>
    126b:	48 8d 8d f0 ef ff ff 	lea    -0x1010(%rbp),%rcx
    1272:	8b 85 ec ef ff ff    	mov    -0x1014(%rbp),%eax
    1278:	ba 00 10 00 00       	mov    $0x1000,%edx
    127d:	48 89 ce             	mov    %rcx,%rsi
    1280:	89 c7                	mov    %eax,%edi
    1282:	e8 f9 fd ff ff       	call   1080 <write@plt>
    1287:	48 8d 8d f0 ef ff ff 	lea    -0x1010(%rbp),%rcx
    128e:	8b 85 e8 ef ff ff    	mov    -0x1018(%rbp),%eax
    1294:	ba 00 10 00 00       	mov    $0x1000,%edx
    1299:	48 89 ce             	mov    %rcx,%rsi
    129c:	89 c7                	mov    %eax,%edi
    129e:	e8 fd fd ff ff       	call   10a0 <read@plt>
    12a3:	89 85 e4 ef ff ff    	mov    %eax,-0x101c(%rbp)
    12a9:	8b 85 e4 ef ff ff    	mov    -0x101c(%rbp),%eax
    12af:	48 98                	cltq   
    12b1:	c6 84 05 f0 ef ff ff 	movb   $0x0,-0x1010(%rbp,%rax,1)
    12b8:	00 
    12b9:	83 bd e4 ef ff ff 00 	cmpl   $0x0,-0x101c(%rbp)
    12c0:	7f a9                	jg     126b <main+0xc2>
    12c2:	b8 00 00 00 00       	mov    $0x0,%eax
    12c7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    12cb:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    12d2:	00 00 
    12d4:	74 05                	je     12db <main+0x132>
    12d6:	e8 b5 fd ff ff       	call   1090 <__stack_chk_fail@plt>
    12db:	c9                   	leave  
    12dc:	c3                   	ret    

Disassembly of section .fini:

00000000000012e0 <_fini>:
    12e0:	f3 0f 1e fa          	endbr64 
    12e4:	48 83 ec 08          	sub    $0x8,%rsp
    12e8:	48 83 c4 08          	add    $0x8,%rsp
    12ec:	c3                   	ret    
